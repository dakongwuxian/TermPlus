2025.4.1
1.将单条发送框变成了下拉框，可以在其中看到历史发送过的命令，在主窗口中按下enter发送和在单条发送框中发送，共享同一个历史命令存储。在单条发送框中按下键和上键，会移动到历史发送命令去。在主窗口中按上下键，则会在最近发送过的命令中进行选择和替换。
2.在主窗口中可以对输入的命令进行backspace删除了，也可以用光标左右移动后删除，但如果输入命令期间，使用鼠标移动了光标，或由于接收到了回复的消息，打断了输入的连续性，则会出现删除的内容在主窗口中的显示和实际删除的指令的字符不对应的情况，但不影响命令的输入修改和发送。


2025.3.24
1.修复了“Send & Next"按键的功能，之前增加调过#和wait开头的逻辑写错了，进行了更正。
2.修改了自动删除接收窗口中的逻辑，字符数量超过10万才删除，保留后面一半的行，之前是超过1万就删除，保留后面2屏幕。


2025.3.20
1.增加了2个文本框，用于输入“等待字符”和“超时时间”，这2个文本框的作用是：
	当点击标签页区域的按键时，如果按键里有多行内容，则会将所有行逐一发送出去，每发送出去一行，都会等待“等待字符”中的字符，然后才会继续发送下一行。
	如果等待的时间超过“超时时间”，则当次发送直接结束。
2.修改了周期性清屏的规则，每10s会检查接收窗口中的字符数量，超过1万的话则会删除前面的行，仅保留最后2屏幕的行。
3.修改了多行循环发送窗口中，wait for 函数的逻辑，让周期性清屏不会影响到wait for函数的搜索位置，可以正常运行。
4.修改了标签页区域，点击发送多行文本和send all按键的逻辑，让“等待字符”的功能和wait以及wait for语句不会冲突。
5.增加“等待字符”超时时的操作，会在窗口中增加超时的提醒。（在标签页区域和多行循环发送区域，使用wait for语句不会有超时提醒）