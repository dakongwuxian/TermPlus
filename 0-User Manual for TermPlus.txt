TermPlus 用户手册

0、简介

本软件由Xian Wu个人开发，为单一exe文件的GUI程序，可在windows系统上运行（如果要在其他操作系统上运行需要使用原代码重新打包），使用python 3.10和VS2022的环境，借助了ChatGPT的帮助。

开发该软件的主要目的为解决Term和IPOP软件的缺陷和易用性较差的需求（循环测试语句不好写，自动保存日志不方便，长期运行容易崩溃，循环发送会占用进程等），同时增加对Power Shell（CMD终端）和SCPI（程控电源）的支持（实现对指定IP的linux设备的文件写入操作和程控电源的掉电重启的需求）。

该软件同时也增加了时间戳、上下键访问历史发送指令、简易循环脚本语法、脚本关键字高亮、自动清屏（长时间运行更稳定）和日志保存等功能。

1、使用说明

1.1 打开串口

双击TermPlus.exe，窗口启动，选择串口下拉框，选择想要打开的COM口，选择合适的波特率（如果没有合适的波特率可以直接输入一个波特率），点击“打开串口”。

如果启动程序时还没插入串口设备，等串口设备插入后，点击刷新串口，则可以重新获取到可连接的串口设备。

1.2 主窗口发送和接收

在左上角的主窗口中，直接输入命令，按下回车键则会发送出去，输入内容的末尾默认会增加一个“\n”字符，未输入任何内容时按下回车键，会单独发送一个“\n”字符。

接收到的内容，会直接显示在主窗口中。

1.3 单行发送和单行循环

在发送文本框中输入内容，点击“发送”按键，会将发送文本框中的内容发送出去，如果勾选了“发送新行”，则会默认在内容的末尾增加一个“\n”，窗口启动后该框默认勾选。

点击“单行循环”按键，则会将发送文本框中的内容循环发送，间隔为循环间隔文本框中写入的时间，再次点击则会停止。

1.4 自动保存

点击自动保存路径下方的按键，选择路径，在保存文件名文本框中写入想要的文件名，点击自动保存右侧的OFF按键，按键变成ON，则开启了自动保存功能。

该功能会创建一个.txt文件，文件名为指定的文件名+日期+时间，存放在指定的路径下。

每10s会进行一次自动保存，如果保存文件的大小超过了指定的文件最大容量，则会新建一个文件继续保存。

点击ON，则按键切换为OFF，自动保存关闭。

自动保存的同时会检测当前主窗口中的字符数量是否超过1万，超过则会将当前屏幕之前的所有内容删除。

1.5 加载脚本和标签页区域

点击脚本路径下方的按键，选择文件夹，脚本文件下拉选择框会将该路径下的所有.ts文件显示出来，选择想要加载的文件，点击“加载脚本”按键，则该脚本文件中包含的内容都会加载到标签页区域。

单击标签页区域的按键，则该按键的多行命令会逐行发送出去，如果“等待字符”中有字符且“超时时间”中有数字，则每次发送后会等待该字符再发送下一行，如果超时则会停止发送。如果“等待字符”或”超时时间“为空，则默认每行发送间等待100ms。

发送的命令中，如果有wait t或wait for x for t，则会执行延时和等待指定内容的延时操作，其他内容会直接被逐行发送出去。

右键点击标签页区域的按键，还可以编辑该按键的名称和内容，也可以在弹出的窗口中进行：发送当前行、发送当前行并移动到下一行、发送全部、保存、保存并退出等操作。

标签页区域的内容，也可以通过保存脚本、另存为按键进行保存和另存为。

1.6 多行循环发送

多行循环发送区域，可以输入多行内容，当点击“多行循环”按键后，会逐行发送多行循环发送内的每一行，每次发送的间隔时间可以在“默认间隔时间”的文本框中进行指定，如果“循环次数”文本框中的数字为0，则会永久循环发送，如果为1，则发送1次后结束，如果为n，则循环n次后结束。当前的循环次数会显示在“当前执行循环”处。

多行循环过程中，再次点击该按键，可以提前停止循环。

多行循环发送的文本框中的内容，可以打开.txt文件进行加载，也可以保存和另存为。

多行循环发送的send x的下一行如果没有wait或wait for，则执行时会增加一条wait函数，wait的时间为默认间隔时间。

1.7 界面调整按钮

在左上方有“按键”、“脚本”、“配置”、“主题”等按钮，前三个按键按下后会切换对应区域的布局，主题按键按下后会切换浅色和深色界面。

由于tkinter控件的限制和windows系统的限制，窗口的标题栏和菜单栏无法进行颜色修改。

2、细节说明

2.1 主窗口发送和接收

接收到的内容，会直接显示在主窗口中，如果接收内容的末尾是回车符或换行符，则会立即显示。

如果接收到的内容没有以回车符或换行符结尾，则会等待0.01秒后才将接收到的内容作为一次接收显示到主窗口中。

在主窗口中输入的字符，会暂存在buffer中，按下enter键时才会发送并清空buffer，如果输入backspace键，窗口显示的内容会变化，但buffer中的内容不会消失，因此输入错误的内容需要发送一次后重新输入。

2.2 自动保存设置和加载设置

运行exe时，会检测是否存在.ini文件及其配置，如果存在则会将相关配置加载到整个界面。

关闭exe时，会将配置保存到.ini文件中。

2.3 多行循环发送

该文本框中的内容，相当于一个可供python代码运行的空间，点击循环发送后，会将所有的行合并成一个可执行的字符串，然后执行该字符串的代码。

针对send x，wait t， wait for x for t三个函数，进行了特殊处理，这三个函数不满足python语法，但会转换成符合python语法的函数去执行。

send_line(text)
wait(seconds)
wait_for(target_string, over_time)

可以参考example.txt的文档，了解for while循环，以及send x，wait t， wait for x for t函数的使用方法。

2.4 加载脚本

可以加载后缀为.ts的文件，解码方式为GBK，支持英文和中文。

2.5 给窗口命名

在右上角的窗口名下方的文本框中输入文字，窗口的标题会随着一起变化。

2.6 主窗口发送与接收

在主窗口中按下enter键，会发送一个\n字符并在主窗口中换行。

主窗口的接收函数是单独的线程持续运行的，如果没收到任何字符，会sleep 10ms，然后继续接收。

如果接收到了\n，会视作一次接收结束，并显示到主窗口。

如果快速的持续发送带有\n的命令，会导致发送字符与接收字符穿插在一起显示在主窗口中。

2.7 自动保存和自动清屏

每10秒会运行一次自动保存和自动“清屏”，如果自动保存未开启，则不保存，自动“清屏”则一直都会进行。

自动“清屏”指的是，如果主窗口中的字符数量超过10万，则会仅保留总行数后一半的行数的内容，删除掉前面的内容。

2.8 Power Shell

增加了对Power Shell的支持，参见Example Scripts。

2.9 SCPI

增加了对SCPI的支持，可以控制程控电源等设备，参见Example Scripts。





